###########################
######## conductor ########
###########################
# The bearer token to retrieve sequencer blocks as blobs from Celestia.
# The token is obtained by running `celestia bridge auth <permissions>`
# on the host running the celestia node.
ASTRIA_CONDUCTOR_CELESTIA_BEARER_TOKEN="<JWT Bearer token>"

# The URL of the celestia node to fetch blocks from. This URL must contain
# either http or https as scheme.
ASTRIA_CONDUCTOR_CELESTIA_NODE_HTTP_URL="http://127.0.0.1:26658"

# The URL of the celestia node to subscribe to new network headers. This URL must contain
# either ws or wss as scheme.
ASTRIA_CONDUCTOR_CELESTIA_NODE_WEBSOCKET_URL="ws://127.0.0.1:26658"

# Execution RPC URL
ASTRIA_CONDUCTOR_EXECUTION_RPC_URL="http://127.0.0.1:50051"

# Set the origin where blocks are pulled from and sent to the execution layer
# Setting options:
# - "SoftOnly" -> blocks are only pulled from the sequencer
# - "FirmOnly" -> blocks are only pulled from DA
# - "SoftAndFirm" -> blocks are pulled from both the sequencer and DA
ASTRIA_CONDUCTOR_EXECUTION_COMMIT_LEVEL="SoftOnly"

# Log Level
ASTRIA_CONDUCTOR_LOG="astria_conductor=info"

# If true disables writing to the opentelemetry OTLP endpoint.
ASTRIA_CONDUCTOR_NO_OTEL=true

# If true disables tty detection and forces writing telemetry to stdout.
# If false span data is written to stdout only if it is connected to a tty.
ASTRIA_CONDUCTOR_FORCE_STDOUT=true

# If true uses an exceedingly pretty human readable format to write to stdout.
# If false uses JSON formatted OTEL traces.
# This does nothing unless stdout is connected to a tty or
# `ASTRIA_CONDUCTOR_FORCE_STDOUT` is set to `true`.
ASTRIA_CONDUCTOR_PRETTY_PRINT=true

# If set to any non-empty value removes ANSI escape characters from the pretty
# printed output. Note that this does nothing unless `ASTRIA_CONDUCTOR_PRETTY_PRINT`
# is set to `true`.
NO_COLOR=

# The URL of the Sequencer gRPC service for requesting new blocks.
# 127.0.0.1:8080 is the default socket address for its gRPC server.
ASTRIA_CONDUCTOR_SEQUENCER_GRPC_URL="http://127.0.0.1:8080"

# The URL of a fully trusted CometBFT/Sequencer node to get the latest height of
# the Sequencer network, and to get the validators for a given Sequencer height
# to verify Sequencer data read off Celestia.
# 127.0.0.1:26657 is the default socket address in comebft's `rpc.laddr` setting.
ASTRIA_CONDUCTOR_SEQUENCER_COMETBFT_URL="http://127.0.0.1:26657"

# The duration in milliseconds that conductor waits between requests for the latest
# block height from sequencer.
# A block time of 2000 is the default for sequencer.
ASTRIA_CONDUCTOR_SEQUENCER_BLOCK_TIME_MS=2000

# Set to true to enable prometheus metrics.
ASTRIA_CONDUCTOR_NO_METRICS=true

# The address at which the prometheus HTTP listener will bind if enabled.
ASTRIA_CONDUCTOR_METRICS_HTTP_LISTENER_ADDR="127.0.0.1:9000"


###########################
######## sequencer ########
###########################
# Socket address to listen for ABCI requests from cometbft.
# This address corresponds to the `--proxy_app "tcp://<ASTRIA_SEQUENCER_LISTEN_ADDR>"`,
# where `tcp://127.0.0.1:26658` is comebft's default.
ASTRIA_SEQUENCER_LISTEN_ADDR="127.0.0.1:26658"

# Path to rocksdb
ASTRIA_SEQUENCER_DB_FILEPATH="~/data/astria_sequencer_db"

# Set to true to enable the mint component
# Only used if the "mint" feature is enabled
ASTRIA_SEQUENCER_ENABLE_MINT=false

# Socket address for gRPC server
ASTRIA_SEQUENCER_GRPC_ADDR="127.0.0.1:8080"
# Log level for the sequencer
ASTRIA_SEQUENCER_LOG="astria_sequencer=info"

# If true disables writing to the opentelemetry OTLP endpoint.
ASTRIA_SEQUENCER_NO_OTEL=true

# If true disables tty detection and forces writing telemetry to stdout.
# If false span data is written to stdout only if it is connected to a tty.
ASTRIA_SEQUENCER_FORCE_STDOUT=true

# Set to true to enable prometheus metrics.
ASTRIA_SEQUENCER_NO_METRICS=true

# The address at which the prometheus HTTP listener will bind if enabled.
ASTRIA_SEQUENCER_METRICS_HTTP_LISTENER_ADDR="127.0.0.1:9000"

# If true uses an exceedingly pretty human readable format to write to stdout.
# If false uses JSON formatted OTEL traces.
# This does nothing unless stdout is connected to a tty or
# `ASTRIA_SEQUENCER_FORCE_STDOUT` is set to `true`.
ASTRIA_SEQUENCER_PRETTY_PRINT=true

# If set to any non-empty value removes ANSI escape characters from the pretty
# printed output. Note that this does nothing unless `ASTRIA_SEQUENCER_PRETTY_PRINT`
# is set to `true`.
NO_COLOR=


##########################
######## composer ########
##########################
# Configuration options of Astria Composer.

# Log level. One of debug, info, warn, or error
ASTRIA_COMPOSER_LOG="astria_composer=info"

# If true disables writing to the opentelemetry OTLP endpoint.
ASTRIA_COMPOSER_NO_OTEL=true

# If true disables tty detection and forces writing telemetry to stdout.
# If false span data is written to stdout only if it is connected to a tty.
ASTRIA_COMPOSER_FORCE_STDOUT=true

# If true uses an exceedingly pretty human readable format to write to stdout.
# If false uses JSON formatted OTEL traces.
# This does nothing unless stdout is connected to a tty or
# `ASTRIA_COMPOSER_FORCE_STDOUT` is set to `true`.
ASTRIA_COMPOSER_PRETTY_PRINT=true

# If set to any non-empty value removes ANSI escape characters from the pretty
# printed output. Note that this does nothing unless `ASTRIA_COMPOSER_PRETTY_PRINT`
# is set to `true`.
NO_COLOR=

# Address of the API server
ASTRIA_COMPOSER_API_LISTEN_ADDR="0.0.0.0:0"

# Address of the RPC server for the sequencer chain
ASTRIA_COMPOSER_SEQUENCER_URL="http://127.0.0.1:26657"

# A list of execution `<rollup_name_1>::<rpc_server_1>,<rollup_name_2>::<rpc_server_2>`.
# Rollup names are not case sensitive. If a name is repeated, the last list item is used.
# names are sha256 hashed and used as the `rollup_id` in `SequenceAction`s
ASTRIA_COMPOSER_ROLLUPS="astriachain::ws://127.0.0.1:8546"

# Private key for the sequencer account used for signing transactions
# Must be a hex-encoded 32-byte array (64-character hex string)
ASTRIA_COMPOSER_PRIVATE_KEY="2bd806c97f0e00af1a1fc3328fa763a9269723c8db8fac4f93af71db186d6e90"

# Block time in milliseconds, used to force submitting of finished bundles.
# Should match the sequencer node configuration for 'timeout_commit', as
# specified in https://docs.tendermint.com/v0.34/tendermint-core/configuration.html
ASTRIA_COMPOSER_MAX_SUBMIT_INTERVAL_MS=2000

# Max bytes to encode into a single sequencer `SignedTransaction`, not including signature,
# public key, nonce. This is the sum of the sizes of all the `SequenceAction`s. Should be
# set below the sequencer's max block size to allow space for encoding, signature, public
# key and nonce bytes
ASTRIA_COMPOSER_MAX_BYTES_PER_BUNDLE=200000

# Set to true to enable prometheus metrics.
ASTRIA_COMPOSER_NO_METRICS=true

# The address at which the prometheus HTTP listener will bind if enabled.
ASTRIA_COMPOSER_METRICS_HTTP_LISTENER_ADDR="127.0.0.1:9000"

# The address at which the gRPC collector and health services are listening.
ASTRIA_COMPOSER_GRPC_ADDR="0.0.0.0:0"


##########################
######## otel ########
##########################

# The OTEL specific config options follow the OpenTelemetry Protocol Exporter v1
# specification as defined here:
# https://github.com/open-telemetry/opentelemetry-specification/blob/e94af89e3d0c01de30127a0f423e912f6cda7bed/specification/protocol/exporter.md

# Sets the general OTLP endpoint.
OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4317"
# Sets the OTLP endpoint for trace data. This takes precedence over `OTEL_EXPORTER_OTLP_ENDPOINT` if set.
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT="http://localhost:4317/v1/traces"
# The duration in seconds that the OTEL exporter will wait for each batch export.
OTEL_EXPORTER_OTLP_TRACES_TIMEOUT=10
# The compression format to use for exporting. Only `"gzip"` is supported.
# Don't set the env var if no compression is required.
OTEL_EXPORTER_OTLP_TRACES_COMPRESSION="gzip"
# The HTTP headers that will be set when sending gRPC requests.
OTEL_EXPORTER_OTLP_HEADERS="key1=value1,key2=value2"
# The HTTP headers that will be set when sending gRPC requests. This takes precedence over `OTEL_EXPORTER_OTLP_HEADERS` if set.
OTEL_EXPORTER_OTLP_TRACE_HEADERS="key1=value1,key2=value2"
